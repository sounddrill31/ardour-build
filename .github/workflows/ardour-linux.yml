name: Ardour Build for Linux

on:
  push:
    branches: 
      - linux
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    branches: 
      - linux
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  repository_dispatch:
    types: ardour-linux-build

env:
  ARDOUR_VERSION: 6.9
  # available upload services: wetransfer.com, file.io, 0x0.st
  UPLOAD_SERVICE: wetransfer.com
  # ardour spurce code tar ball, need check its sha256sums.
  # https://community.ardour.org/srctar
  # https://fossies.org/linux/misc/Ardour-6.8.0.tar.bz2

jobs:
  ardour-build:
    name: Ardour Build for Linux ${{ matrix.config.arch }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              arch: x86_64,
              image_repo: debian,
              image_tag: bullseye
            }
          # - {
          #     arch: armhf,
          #     image_repo: debian,
          #     image_tag: buster
          #   }        
          # - {
          #     arch: arm64,
          #     image_repo: debian,
          #     image_tag: buster
          #   }
    container:
      image: ${{ matrix.config.image_repo }}:${{ matrix.config.image_tag }}
      options: -v ${{ github.workspace }}:/home/ardour:rw
    steps:

      - name: Install the Basic Dependencies
        shell: bash
        run: |
          apt-get -y -qq update && apt-get -y --no-install-recommends install \
            apt-transport-https \
            python3 \
            python3-pip \
            git \
            ca-certificates \
            rsync \
            unzip \
            itstool \
            build-essential \
            ccache \
            wget \
            python \
            python-dev \
            libxml-parser-perl \
            file \
            libx11-dev \
            libx11-xcb-dev \
            libxext-dev \
            libxrender-dev \
            ocaml-nox \
            gperf \
            libxcb-render0-dev \
            libxcb1-dev \
            libxcb-shm0-dev \
            libpulse-dev \
            libasound-dev \
            libjack-dev \
            ladspa-sdk \
            makeself \
            chrpath \
            mawk

      - name: Checkout Build Tools
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          fetch-depth: 0
          ref: linux
          path: '.'

      - name: Get Ardour Latest Release Source Code
        uses: actions/checkout@v2
        with:
          repository: 'Ardour/ardour'
          fetch-depth: 1
          ref: ${{ env.ARDOUR_VERSION }}
          path: './src'
        
      - name: Print GCC/G++ Version
        shell: bash
        run: |
          gcc --version
          g++ --version

      - name: Prepare
        shell: bash
        run: |
          chmod a+x /home/ardour/ci/waf
          chmod a+x /home/ardour/ci/rb-wscript
          chmod a+x /home/ardour/ci/vamp-wscript

      - name: Set env
        if: matrix.config.arch == 'x86_64'
        shell: bash
        run: |
          echo "HOME=/home/ardour/linux-${{ matrix.config.arch }}" >> $GITHUB_ENV
          echo "PATH=/usr/lib/ccache:/home/ardour/linux-${{ matrix.config.arch }}/bin:/home/ardour/linux-${{ matrix.config.arch }}/gtk/inst/bin/:$PATH" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/home/ardour/linux-${{ matrix.config.arch }}/gtk/inst/lib/pkgconfig/:/usr/lib/i386-linux-gnu/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig/" >> $GITHUB_ENV
          echo "PYTHONPATH=./:/home/ardour/linux-${{ matrix.config.arch }}/gtk/inst/lib/python`python --version 2>&1 | cut -d ' ' -f 2 | cut -b 1-3`/site-packages/" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/home/ardour/linux-${{ matrix.config.arch }}/gtk/inst/lib/" >> $GITHUB_ENV      

      - name: Set env
        if: startsWith(matrix.config.arch, 'arm')
        shell: bash
        run: |
          echo "XARCH=${{ matrix.config.arch }}" >> $GITHUB_ENV
          echo "SRCDIR=/home/ardour/tmp/winsrc"  >> $GITHUB_ENV
          echo "TMPDIR=/home/ardour/tmp" >> $GITHUB_ENV
          echo "ROOT=/home/ardour" >> $GITHUB_ENV

      - name: Print env
        shell: bash
        run: |
          env

      - name: Install Build Stack
        if: matrix.config.arch == 'x86_64'
        shell: bash
        run: |
          bash /home/ardour/ci/build-stack

      - name: Install Build Stack
        if: startsWith(matrix.config.arch, 'arm')
        shell: bash
        run: |
          bash /home/ardour/ci/x-armhf.sh

      - name: Compile
        # --depstack-root defaults to ~ 
        shell: bash
        run: |
          cd /home/ardour/src
          python3 ./waf configure --strict --prefix=/usr --configdir=/etc --libjack=weak --ptformat --with-backends=jack,alsa,pulseaudio,dummy --optimize --cxx11 --freedesktop
          python3 ./waf -j$(nproc)
          python3 ./waf i18n
          python3 ./waf install

      - name: Package
        shell: bash
        run: |
          cd /home/ardour/src/tools/linux_packaging
          bash ./build --public --harvid
          bash ./package --public --singlearch --makeself

      - name: Upload Binary
        if: matrix.config.arch == 'x86_64'
        # Ardour-6.8.0-x86_64.run
        shell: bash
        run: |
          TEMP_DOWNLOAD_URL=$(sh /home/ardour/ci/services/${{ env.UPLOAD_SERVICE }}.sh /home/ardour/src/tools/linux_packaging/Ardour-*-${{ matrix.config.arch }}.run)
          echo Download URL is $TEMP_DOWNLOAD_URL      

      - name: Upload Binary
        if: startsWith(matrix.config.arch, 'arm')
        # Ardour_arm64-6.8.0.run, Ardour_armhf-6.8.0.run
        shell: bash
        run: |
          TEMP_DOWNLOAD_URL=$(sh /home/ardour/ci/services/${{ env.UPLOAD_SERVICE }}.sh /home/ardour/src/tools/linux_packaging/Ardour_${{ matrix.config.arch }}-*.run)
          echo Download URL is $TEMP_DOWNLOAD_URL

      - name: Upload Artifact
        if: matrix.config.arch == 'x86_64'
        uses: actions/upload-artifact@v2
        with:
          name: Ardour-Linux-Artifact
          path: |
            ${{ github.workspace }}/src/tools/linux_packaging/Ardour-*-${{ matrix.config.arch }}.run      

      - name: Upload Artifact
        if: startsWith(matrix.config.arch, 'arm')
        uses: actions/upload-artifact@v2
        with:
          name: Ardour-Linux-Artifact
          path: |
            ${{ github.workspace }}/src/tools/linux_packaging/Ardour_${{ matrix.config.arch }}-*.run
            
      - name: Upload to Release
        uses: xresloader/upload-to-github-release@v1
        with: 
          file: ${{ github.workspace }}/src/tools/linux_packaging/Ardour_${{ matrix.config.arch }}-*.run
          name: ${{ github.run_id }}
          tag_name: ${{ github.run_id }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
